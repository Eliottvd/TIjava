/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import CodeBehind.ImgModifier;
import CodeBehind.Logs.AfficherLogDialog;
import CodeBehind.Logs.FichierLog;
import CodeBehind.QuadTree;
import java.awt.Color;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Eliott
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    
    private boolean _isLogDialogOpened = false;
    private FichierLog _fLog;
    private AfficherLogDialog _ald;
    private BufferedImage _imgBefore;
    private BufferedImage _imgAfter;
    private ImgModifier _iMod;
    private int x1, y1, x2, y2;
    private int minValue, maxValue;
    
    public MainWindow() {
        initComponents();
        /*
        try {
            String s = new SyntheticaPlainLookAndFeel();
            UIManager.setLookAndFeel(s);
            //UIManager.setLookAndFeel(new SyntheticaPlainLookAndFeel());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        
        this.setLocationRelativeTo(null);
        this.setIconImage(new ImageIcon("img\\mathlab.png").getImage());
        jSliderTreshold.setVisible(jCheckBoxMenuItemTH.isSelected());
        _fLog = new FichierLog();
        _iMod = new ImgModifier();
        BufferedImage img = null; 
        File f = null; 
  
         
        try
        { 
            f = new File("C:\\Users\\Eliott\\Desktop\\einstein1.jpg"); 
            img = ImageIO.read(f); 
        } 
        catch(IOException e) 
        { 
            JOptionPane.showMessageDialog(this, "Fail to open the file", "Error", JOptionPane.ERROR_MESSAGE);
            dispose();
        } 
        _fLog.addLog("Reading Image");
        
        setImgBefore(img);
        

        CodeBehind.Image img2 = new CodeBehind.Image("C:\\Users\\Eliott\\Desktop\\einstein1.jpg");
        QuadTree qt = new QuadTree(img2);

        // takes threshold as parameter
        qt.divide(5);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jBtnAfter2Before = new javax.swing.JButton();
        jSliderTreshold = new javax.swing.JSlider();
        jBtnZoom1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLabelAfter = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabelBefore = new javax.swing.JLabel();
        jTextFieldZoom1 = new javax.swing.JTextField();
        jLblHV = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLblHistoAfter = new javax.swing.JLabel();
        jLblHistoBefore = new javax.swing.JLabel();
        jTextFieldZoom3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jBtnZoom3 = new javax.swing.JButton();
        jTextFieldZoom4 = new javax.swing.JTextField();
        jTextFieldZoom5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuAffLog = new javax.swing.JMenu();
        jMenuItemOpen = new javax.swing.JMenuItem();
        jMenuItemSave = new javax.swing.JMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuBase = new javax.swing.JMenu();
        jMenuItemGrayscale = new javax.swing.JMenuItem();
        jMenuItemNegative = new javax.swing.JMenuItem();
        jCheckBoxMenuItemTH = new javax.swing.JCheckBoxMenuItem();
        jMenuItemMultiTH = new javax.swing.JMenuItem();
        jMenuItemPalette = new javax.swing.JMenuItem();
        jMenuItemEgalisation = new javax.swing.JMenuItem();
        jMenuFilltres = new javax.swing.JMenu();
        jMenuItemMediumF = new javax.swing.JMenuItem();
        jMenuItemMedian = new javax.swing.JMenuItem();
        jMenuItemBelgianFilter = new javax.swing.JMenuItem();
        jMenuItemLaplacian = new javax.swing.JMenuItem();
        jMenuItemKirsh = new javax.swing.JMenuItem();
        jMenuItemSobel = new javax.swing.JMenuItem();
        jMenuItemPrewitt = new javax.swing.JMenuItem();
        jMenuItemRoberts = new javax.swing.JMenuItem();
        jMenuMorphologie = new javax.swing.JMenu();
        jMenuItemOuverture = new javax.swing.JMenuItem();
        jMenuItemFermeture = new javax.swing.JMenuItem();
        jMenuItemErosion = new javax.swing.JMenuItem();
        jMenuItemDilatation = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Image processing");
        setBackground(java.awt.SystemColor.windowBorder);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBtnAfter2Before.setText("<=");
        jBtnAfter2Before.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAfter2BeforeActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnAfter2Before, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, -1, -1));

        jSliderTreshold.setMaximum(255);
        jSliderTreshold.setMinorTickSpacing(1);
        jSliderTreshold.setPaintTicks(true);
        jSliderTreshold.setToolTipText("");
        jSliderTreshold.setValue(128);
        jSliderTreshold.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSliderTresholdMouseDragged(evt);
            }
        });
        getContentPane().add(jSliderTreshold, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 570, 150, -1));

        jBtnZoom1.setText("Zoom");
        jBtnZoom1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnZoom1ActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnZoom1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, -1, -1));

        jScrollPane2.setPreferredSize(new java.awt.Dimension(256, 256));

        jLabelAfter.setPreferredSize(null);
        jScrollPane2.setViewportView(jLabelAfter);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 512, 512));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(512, 512));

        jLabelBefore.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jLabelBefore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabelBeforeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabelBeforeMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jLabelBefore);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, -1, -1));

        jTextFieldZoom1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldZoom1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldZoom1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 37, -1));
        getContentPane().add(jLblHV, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 485, 41, -1));

        jLabel1.setText("255");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 730, 30, -1));

        jLabel2.setText("0");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 730, 35, -1));

        jLabel3.setText("255");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 740, 30, -1));

        jLabel4.setText("0");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 740, 86, -1));

        jLblHistoAfter.setBackground(new java.awt.Color(255, 0, 0));
        jLblHistoAfter.setForeground(new java.awt.Color(127, 127, 127));
        getContentPane().add(jLblHistoAfter, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 540, 258, 200));

        jLblHistoBefore.setBackground(new java.awt.Color(255, 0, 0));
        jLblHistoBefore.setForeground(new java.awt.Color(127, 127, 127));
        jLblHistoBefore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLblHistoBeforeMouseClicked(evt);
            }
        });
        getContentPane().add(jLblHistoBefore, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 530, 258, 200));

        jTextFieldZoom3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldZoom3ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldZoom3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 37, -1));

        jLabel5.setText("y :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 20));

        jLabel6.setText("x :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 30));

        jBtnZoom3.setText("Zoom");
        jBtnZoom3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnZoom3ActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnZoom3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 90, -1, -1));

        jTextFieldZoom4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldZoom4ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldZoom4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 60, 37, -1));

        jTextFieldZoom5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldZoom5ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldZoom5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 30, 37, -1));

        jLabel7.setText("y :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 60, -1, 20));

        jLabel8.setText("x :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 30, -1, 30));

        jMenuAffLog.setText("File");
        jMenuAffLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAffLogActionPerformed(evt);
            }
        });

        jMenuItemOpen.setText("Open");
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenuAffLog.add(jMenuItemOpen);

        jMenuItemSave.setText("Save");
        jMenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveActionPerformed(evt);
            }
        });
        jMenuAffLog.add(jMenuItemSave);

        jCheckBoxMenuItem1.setText("Afficher le log");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenuAffLog.add(jCheckBoxMenuItem1);

        jMenuBar1.add(jMenuAffLog);

        jMenuBase.setText("Base");

        jMenuItemGrayscale.setText("Greyscale");
        jMenuItemGrayscale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGrayscaleActionPerformed(evt);
            }
        });
        jMenuBase.add(jMenuItemGrayscale);

        jMenuItemNegative.setText("Negative");
        jMenuItemNegative.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNegativeActionPerformed(evt);
            }
        });
        jMenuBase.add(jMenuItemNegative);

        jCheckBoxMenuItemTH.setText("Treshold");
        jCheckBoxMenuItemTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemTHActionPerformed(evt);
            }
        });
        jMenuBase.add(jCheckBoxMenuItemTH);

        jMenuItemMultiTH.setText("MultiTreshold");
        jMenuItemMultiTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMultiTHActionPerformed(evt);
            }
        });
        jMenuBase.add(jMenuItemMultiTH);

        jMenuItemPalette.setText("Palette");
        jMenuItemPalette.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPaletteActionPerformed(evt);
            }
        });
        jMenuBase.add(jMenuItemPalette);

        jMenuItemEgalisation.setText("Equalisation");
        jMenuItemEgalisation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEgalisationActionPerformed(evt);
            }
        });
        jMenuBase.add(jMenuItemEgalisation);

        jMenuBar1.add(jMenuBase);

        jMenuFilltres.setText("Filtres");

        jMenuItemMediumF.setText("Medium Filter");
        jMenuItemMediumF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMediumFActionPerformed(evt);
            }
        });
        jMenuFilltres.add(jMenuItemMediumF);

        jMenuItemMedian.setText("Median Filter");
        jMenuItemMedian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMedianActionPerformed(evt);
            }
        });
        jMenuFilltres.add(jMenuItemMedian);

        jMenuItemBelgianFilter.setText("BelgianFilter");
        jMenuItemBelgianFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBelgianFilterActionPerformed(evt);
            }
        });
        jMenuFilltres.add(jMenuItemBelgianFilter);

        jMenuItemLaplacian.setText("Laplacian");
        jMenuItemLaplacian.setToolTipText("");
        jMenuItemLaplacian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLaplacianActionPerformed(evt);
            }
        });
        jMenuFilltres.add(jMenuItemLaplacian);

        jMenuItemKirsh.setText("Kirsh");
        jMenuItemKirsh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemKirshActionPerformed(evt);
            }
        });
        jMenuFilltres.add(jMenuItemKirsh);

        jMenuItemSobel.setText("Sobel");
        jMenuItemSobel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSobelActionPerformed(evt);
            }
        });
        jMenuFilltres.add(jMenuItemSobel);

        jMenuItemPrewitt.setText("Prewitt");
        jMenuItemPrewitt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPrewittActionPerformed(evt);
            }
        });
        jMenuFilltres.add(jMenuItemPrewitt);

        jMenuItemRoberts.setText("Roberts");
        jMenuItemRoberts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRobertsActionPerformed(evt);
            }
        });
        jMenuFilltres.add(jMenuItemRoberts);

        jMenuBar1.add(jMenuFilltres);

        jMenuMorphologie.setText("Morphologie");

        jMenuItemOuverture.setText("Open");
        jMenuMorphologie.add(jMenuItemOuverture);

        jMenuItemFermeture.setText("Close");
        jMenuMorphologie.add(jMenuItemFermeture);

        jMenuItemErosion.setText("Erosion");
        jMenuItemErosion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemErosionActionPerformed(evt);
            }
        });
        jMenuMorphologie.add(jMenuItemErosion);

        jMenuItemDilatation.setText("Dilatation");
        jMenuMorphologie.add(jMenuItemDilatation);

        jMenuBar1.add(jMenuMorphologie);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new FichierLog().addLog("--FIN DE LA SESSION");
        new FichierLog().addLog("");
        new FichierLog().addLog("");
    }//GEN-LAST:event_formWindowClosing

    private void jMenuAffLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAffLogActionPerformed

    }//GEN-LAST:event_jMenuAffLogActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        if(_isLogDialogOpened == false)
        {
            _isLogDialogOpened = true;
            _ald = new AfficherLogDialog(this, false);
            _ald.setVisible(true);
        }
        else
        {
            _ald.dispose();
            _isLogDialogOpened = false;
        }
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jBtnAfter2BeforeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAfter2BeforeActionPerformed
        
        try {
            _fLog.addLog("Swapping before and after");
            BufferedImage tmp = _iMod.copyImage(_imgAfter);
            //_imgAfter = _imgBefore;
            _imgBefore = tmp;
            //setImgAfter(_imgAfter);
            setImgBefore(tmp);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error : No Result Image");
            _fLog.addLog("Can't swap : no after image");
        }

        
    }//GEN-LAST:event_jBtnAfter2BeforeActionPerformed

    private void jSliderTresholdMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderTresholdMouseDragged
        // TODO add your handling code here:
        if(jCheckBoxMenuItemTH.isSelected())
        {
            setImgAfter(_iMod.Treshold(_imgBefore, jSliderTreshold.getValue()));
            //_fLog.addLog("Treshold");
        }
        
    }//GEN-LAST:event_jSliderTresholdMouseDragged

    private void jBtnZoom1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnZoom1ActionPerformed
        setImgBefore(_iMod.Expansion(_imgBefore, Float.parseFloat(jTextFieldZoom3.getText()), Float.parseFloat(jTextFieldZoom1.getText())));
    }//GEN-LAST:event_jBtnZoom1ActionPerformed

    private void jTextFieldZoom1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldZoom1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldZoom1ActionPerformed

    private void jLabelBeforeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBeforeMousePressed
        // TODO add your handling code here:
        x1 = evt.getX();
        y1 = evt.getY(); 
    }//GEN-LAST:event_jLabelBeforeMousePressed

    private void jLabelBeforeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBeforeMouseReleased
        // TODO add your handling code here:
        x2 = evt.getX();
        y2 = evt.getY(); 
        
        BufferedImage img = _iMod.copyImage(_imgBefore);
        
        Rectangle rect;
        if(x1 <= x2)
            if(y1 <= y2)
                rect = new Rectangle(x1, y1, x2-x1, y2-y1);
            else
                rect = new Rectangle(x1, y2, x2-x1, y1-y2);
        else
            if(y1 <= y2)
                rect = new Rectangle(x2, y1, x1-x2, y2-y1);
            else
                rect = new Rectangle(x2, y2, x1-x2, y1-y2);
        
        setImgAfter(img.getSubimage((int)(rect.x), (int)(rect.y), (int)(rect.width), (int)(rect.height)));
    }//GEN-LAST:event_jLabelBeforeMouseReleased

    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed
        // TODO add your handling code here:
        BufferedImage  img;
        JFileChooser fd = new JFileChooser();
        fd.setCurrentDirectory(new File("C:\\Users\\Eliott\\Desktop"));
        fd.showOpenDialog(this);
        try
        { 
            _fLog.addLog(fd.getSelectedFile().getAbsolutePath());
            File f = new File(fd.getSelectedFile().getAbsolutePath()); 
            img = ImageIO.read(f); 
            setImgBefore(img);
        } 
        catch(IOException e) 
        { 
            JOptionPane.showMessageDialog(this, "Fail to open the file", "Error", JOptionPane.ERROR_MESSAGE);
            dispose();
        } 
        
    }//GEN-LAST:event_jMenuItemOpenActionPerformed

    private void jMenuItemKirshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemKirshActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemKirshActionPerformed

    private void jMenuItemSobelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSobelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemSobelActionPerformed

    private void jMenuItemPrewittActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPrewittActionPerformed
        // TODO add your handling code here:
        setImgAfter(_iMod.FiltreDePrewitt(_imgBefore));
    }//GEN-LAST:event_jMenuItemPrewittActionPerformed

    private void jMenuItemRobertsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRobertsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemRobertsActionPerformed

    private void jMenuItemBelgianFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBelgianFilterActionPerformed
        // TODO add your handling code here:
        setImgAfter(_iMod.FiltreGaussien(_imgBefore, 0.3));
    }//GEN-LAST:event_jMenuItemBelgianFilterActionPerformed

    private void jMenuItemLaplacianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLaplacianActionPerformed
        // TODO add your handling code here:
        setImgAfter(_iMod.FiltreLaplacien(_imgBefore));
    }//GEN-LAST:event_jMenuItemLaplacianActionPerformed

    private void jMenuItemMedianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMedianActionPerformed
        // TODO add your handling code here:
        setImgAfter(_iMod.FiltreMedian(_imgBefore));
        _fLog.addLog("Median Filter");
    }//GEN-LAST:event_jMenuItemMedianActionPerformed

    private void jMenuItemMediumFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMediumFActionPerformed
        // TODO add your handling code here:
        setImgAfter(_iMod.FiltreMoyen(_imgBefore));
        _fLog.addLog("Medium Filter");
    }//GEN-LAST:event_jMenuItemMediumFActionPerformed

    private void jMenuItemErosionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemErosionActionPerformed
        // TODO add your handling code here:
        int mask[] = {1,1,1,1,1,1,1,1,1};
        setImgAfter(_iMod.Erosion(_imgBefore, mask, 3));
    }//GEN-LAST:event_jMenuItemErosionActionPerformed

    private void jMenuItemGrayscaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGrayscaleActionPerformed
        // TODO add your handling code here:
        setImgAfter(_iMod.ToGreyscale(_imgBefore));
        _fLog.addLog("Image to greyscale");
    }//GEN-LAST:event_jMenuItemGrayscaleActionPerformed

    private void jMenuItemNegativeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNegativeActionPerformed
        // TODO add your handling code here:
        setImgAfter(_iMod.Negative(_imgBefore));
        _fLog.addLog("Image to greyscale");
    }//GEN-LAST:event_jMenuItemNegativeActionPerformed

    private void jMenuItemMultiTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMultiTHActionPerformed
        // TODO add your handling code here:
        int[] tab = new int[9];
        MTresholdDialog mtd = new MTresholdDialog(this, true, tab);
        mtd.setVisible(true);
        setImgAfter(_iMod.MultiTreshold(_imgBefore, tab));
    }//GEN-LAST:event_jMenuItemMultiTHActionPerformed

    private void jTextFieldZoom3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldZoom3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldZoom3ActionPerformed

    private void jBtnZoom3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnZoom3ActionPerformed
        // TODO add your handling code here:
        setImgAfter(_iMod.Expansion(_imgAfter, Float.parseFloat(jTextFieldZoom5.getText()), Float.parseFloat(jTextFieldZoom4.getText())));
    }//GEN-LAST:event_jBtnZoom3ActionPerformed

    private void jTextFieldZoom4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldZoom4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldZoom4ActionPerformed

    private void jTextFieldZoom5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldZoom5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldZoom5ActionPerformed

    private void jCheckBoxMenuItemTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemTHActionPerformed
        // TODO add your handling code here:
        jSliderTreshold.setVisible(jCheckBoxMenuItemTH.isSelected());
    }//GEN-LAST:event_jCheckBoxMenuItemTHActionPerformed

    private void jMenuItemPaletteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPaletteActionPerformed
        // TODO add your handling code here:
        PaletteDialog pd = new PaletteDialog(this, true);
        Thread tpd = new Thread(pd);
        tpd.start();
        pd.setVisible(true);
    }//GEN-LAST:event_jMenuItemPaletteActionPerformed

    private void jLblHistoBeforeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLblHistoBeforeMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jLblHistoBeforeMouseClicked

    private void jMenuItemEgalisationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEgalisationActionPerformed
        // TODO add your handling code here:
        setImgAfter(_iMod.equalize(_imgBefore));
        _fLog.addLog("Egalisation");
    }//GEN-LAST:event_jMenuItemEgalisationActionPerformed

    private void jMenuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveActionPerformed
        _iMod.SaveImage(_imgAfter, this);
    }//GEN-LAST:event_jMenuItemSaveActionPerformed

    
    
    private void setImgAfter(BufferedImage img)
    {
        _imgAfter = img;
        jLabelAfter.setIcon(new ImageIcon(_imgAfter));
        jLblHistoAfter.setIcon(new ImageIcon(_iMod.Histogramme(_imgAfter, jLblHistoAfter.getWidth(), jLblHistoAfter.getHeight())));
        _fLog.addLog("Image after changed");
    }
    
    private void setImgBefore(BufferedImage img)
    {
        _imgBefore = img;
        jLabelBefore.setIcon(new ImageIcon(_imgBefore));
        jLblHistoBefore.setIcon(new ImageIcon(_iMod.Histogramme(_imgBefore, jLblHistoBefore.getWidth(), jLblHistoBefore.getHeight())));
        _fLog.addLog("Image before changed");
    }
    
    protected void setColor(Color c)
    {
        setImgAfter(_iMod.ColorChange(_imgBefore, c.getRGB()));
    }

    private void histogramEgalisation()
    {
        int dyn = maxValue-minValue;
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAfter2Before;
    private javax.swing.JButton jBtnZoom1;
    private javax.swing.JButton jBtnZoom3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemTH;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelAfter;
    private javax.swing.JLabel jLabelBefore;
    private javax.swing.JLabel jLblHV;
    private javax.swing.JLabel jLblHistoAfter;
    private javax.swing.JLabel jLblHistoBefore;
    private javax.swing.JMenu jMenuAffLog;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuBase;
    private javax.swing.JMenu jMenuFilltres;
    private javax.swing.JMenuItem jMenuItemBelgianFilter;
    private javax.swing.JMenuItem jMenuItemDilatation;
    private javax.swing.JMenuItem jMenuItemEgalisation;
    private javax.swing.JMenuItem jMenuItemErosion;
    private javax.swing.JMenuItem jMenuItemFermeture;
    private javax.swing.JMenuItem jMenuItemGrayscale;
    private javax.swing.JMenuItem jMenuItemKirsh;
    private javax.swing.JMenuItem jMenuItemLaplacian;
    private javax.swing.JMenuItem jMenuItemMedian;
    private javax.swing.JMenuItem jMenuItemMediumF;
    private javax.swing.JMenuItem jMenuItemMultiTH;
    private javax.swing.JMenuItem jMenuItemNegative;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JMenuItem jMenuItemOuverture;
    private javax.swing.JMenuItem jMenuItemPalette;
    private javax.swing.JMenuItem jMenuItemPrewitt;
    private javax.swing.JMenuItem jMenuItemRoberts;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JMenuItem jMenuItemSobel;
    private javax.swing.JMenu jMenuMorphologie;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSliderTreshold;
    private javax.swing.JTextField jTextFieldZoom1;
    private javax.swing.JTextField jTextFieldZoom3;
    private javax.swing.JTextField jTextFieldZoom4;
    private javax.swing.JTextField jTextFieldZoom5;
    // End of variables declaration//GEN-END:variables

}
